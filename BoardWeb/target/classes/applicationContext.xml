<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">
 
 <!--  <bean id="before" class="com.springbook.biz.common.BeforeAdvice" />
 
 <aop:config>
 	<aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))"/>
 	<aop:aspect ref="before">
 		<aop:before pointcut-ref="allPointcut" method="beforeLog"/>
 	</aop:aspect>
 </aop:config>  -->
 
<!--  <bean id="around" class="com.springbook.biz.common.AfterAdvice" />
 
 <aop:config>
 	<aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Imp.*(..))"/>
 	
 	<aop:aspect ref="around">
 		<aop:around pointcut-ref="allPointcut" method="aroundLog" />	
 	</aop:aspect>
 </aop:config> -->
 
 
 <!-- 예외처리 176 -->
<!-- <bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice" />
<bean id="after" class="com.springbook.biz.common.AfterAdvice" />
	<aop:config>
	<aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))"/>

	<aop:aspect ref="afterThrowing">
	<aop:after-returning pointcut-ref="allPointcut" method="exceptionLog" />
	</aop:aspect>
	
	<aop:aspect ref="after">
		<aop:after pointcut-ref="allPointcut" method="finallyLog"/>
	</aop:aspect>
</aop:config>  -->
 
<!-- <bean id="afterReturning" class="com.springbook.biz.common.AfterReturningAdvice" />

	<aop:config>
	<aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))"/>

	<aop:aspect ref="afterReturning">
	<aop:after-returning pointcut-ref="getPointcut" method="afterLog" />
	</aop:aspect>
</aop:config>
 -->

<!-- 올포인트컷
<bean id="log" class="com.springbook.biz.common.LogAdvice" />

<aop:config>
	<aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))"/>
	
	<aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.get*(..))"/>
	
	<aop:aspect ref="log">
		<aop:after pointcut-ref="getPointcut" method="printLog"/>
	</aop:aspect>
</aop:config>
 -->
 
<!-- AOP설정 추가 152p -->
<context:component-scan base-package="com.springbook.biz" />
<!-- 
<bean id="log" class="com.springbook.biz.common.Log4jAdvice"></bean>
<aop:config>
	<aop:pointcut id="allPointcut" expression="execution(* com.spring.biz..*Impl.*(..))"/>
	
	<aop:aspect ref="log">
		<aop:before pointcut-ref="allPointcut" method="printLogging" />
	</aop:aspect>
</aop:config>  -->

<!-- <bean id="userServoce" class="com.springbook.biz.user.impl.UserServiceImpl">
	<property name="userDAO" ref="userDAO" />
</bean>

<bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO" /> -->


<!-- 컴포넌트 스캔 설정 -->
<!-- <context:component-scan base-package="com.springbook.biz"></context:component-scan>
<bean id="tv" class="com.springbook.biz.LgTV"></bean>
<bean id="sony" class="com.springbook.biz.SonySpeaker"></bean> -->

<!-- <context:component-scan base-package="com.springbook.biz" /> -->

<!-- <bean class="com.springbook.biz.SonySpeaker"></bean> -->
<!-- <bean id="tv" class="com.springbook.biz.SamsungTV">
	<constructor-arg index="0" ref="sony"></constructor-arg>
	<constructor-arg index="1" value="2700000"></constructor-arg>
</bean> -->

<!-- <bean id="tv" class="com.springbook.biz.SamsungTV" p:speaker-ref="sony" p:price="2864231" />

<bean id="sony" class="com.springbook.biz.SonySpeaker"> </bean>
<bean id="apple" class="com.springbook.biz.AppleSpeaker"> </bean> -->

<!-- CollectionBean -->

<!-- <bean id="collectionBean" class="com.springbook.ioc.injection.CollectionBean">
	<property name="addressList">
		<list>
			<value>서울시 강남구 역삼동</value>
			<value>서울시 성동구 행당동</value>
		</list>
	</property> 
</bean> -->

</beans>
